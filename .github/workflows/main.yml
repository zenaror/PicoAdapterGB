name: Build PicoW Firmware (Manual)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        adapter: [REON, STACKSMASHING]
        board: [pico_w, pico2_w]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y cmake gcc-arm-none-eabi build-essential libnewlib-arm-none-eabi
    - name: Clone Pico SDK (v2.1.1)
      run: |
        git clone --depth 1 --branch 2.1.1 https://github.com/raspberrypi/pico-sdk.git
        cd pico-sdk
        git submodule update --init
    - name: Create build directory
      run: |
        mkdir -p build
    - name: Configure CMake
      run: |
        cd build
        cmake .. \
          -DADAPTER=${{ matrix.adapter }} \
          -DPICO_BOARD=${{ matrix.board }} \
          -DPICO_SDK_PATH=${{ github.workspace }}/pico-sdk \
          -DCMAKE_BUILD_TYPE=Release
    - name: Build firmware
      run: |
        cd build
        cmake --build . --parallel
    - name: List files after build
      run: |
        find ./build -type f
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: firmware-${{ matrix.adapter }}-${{ matrix.board }}
        path: ./build/release/${{ matrix.adapter == 'STACKSMASHING' && 'SmBoard' || 'REON' }}/${{ matrix.board == 'pico_w' && 'PicoW' || 'Pico2W' }}/*.uf2
    - name: Create GitHub Release (draft)
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: pre-release-${{ github.run_number }}
        release_name: Beta v#${{ github.run_number }}
        draft: true
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload firmware to release
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/release/${{ matrix.adapter == 'STACKSMASHING' && 'SmBoard' || 'REON' }}/${{ matrix.board == 'pico_w' && 'PicoW' || 'Pico2W' }}/*.uf2
        asset_name: PicoAdapterGB_${{ matrix.board == 'pico_w' && 'PicoW' || 'Pico2W' }}${{ matrix.adapter == 'STACKSMASHING' && '_SmBoard' || '' }}.uf2
        asset_content_type: application/octet-stream

